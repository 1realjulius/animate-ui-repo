{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "gooey-background",
  "type": "registry:ui",
  "title": "Gooey Background",
  "description": "Gooey background component",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/backgrounds/gooey.tsx",
      "content": "import * as React from 'react';\nimport { motion } from 'motion/react';\n\ninterface LeafData {\n  id: number;\n  ringIndex: number;\n  leafIndex: number;\n  totalInRing: number;\n  delay: number;\n  angle: number;\n  hue: number;\n}\n\ntype GooeyBackgroundProps = React.HTMLAttributes<HTMLDivElement>;\n\nconst GooeyBackground = React.forwardRef<HTMLDivElement, GooeyBackgroundProps>(\n  (props, ref) => {\n    const startCount = 10;\n    const ringCount = 13;\n    const leafHeight = 20;\n    const leafWidth = leafHeight / 8;\n\n    const leaves: LeafData[] = [];\n    let globalIndex = 0;\n\n    for (let ri = 0; ri < ringCount; ri++) {\n      const totalInRing = startCount + ri * 11;\n      for (let i = 0; i < totalInRing; i++) {\n        const delay = 0.6 * ri + 0.9 * Math.random();\n        const angle = (360 / totalInRing) * i;\n        const hue = (10 * globalIndex) % 360;\n        leaves.push({\n          id: globalIndex,\n          ringIndex: ri,\n          leafIndex: i,\n          totalInRing,\n          delay,\n          angle,\n          hue,\n        });\n        globalIndex++;\n      }\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"relative w-screen h-screen overflow-hidden bg-[#111]\"\n        {...props}\n      >\n        <svg\n          className=\"absolute w-0 h-0\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          version=\"1.1\"\n        >\n          <filter id=\"blurFilter\">\n            <feGaussianBlur stdDeviation=\"4.5\" />\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"1 0 0 0 0\n                    0 1 0 0 0\n                    0 0 1 0 0\n                    0 0 0 19 -9\"\n            />\n          </filter>\n        </svg>\n\n        <div\n          className=\"absolute inset-0\"\n          style={{ filter: 'url(#blurFilter) saturate(1.5) brightness(1.1)' }}\n        >\n          {leaves.map((leaf) => {\n            const offset = 4.2 + leaf.ringIndex * (leafHeight * 0.44);\n\n            const moveStart = 0;\n            const moveEnd = 22;\n            const rStart = offset + moveStart;\n            const rEnd = offset + moveEnd;\n\n            const angleRad = (leaf.angle * Math.PI) / 180;\n            const xStart = Math.cos(angleRad) * rStart;\n            const yStart = -Math.sin(angleRad) * rStart;\n            const xEnd = Math.cos(angleRad) * rEnd;\n            const yEnd = -Math.sin(angleRad) * rEnd;\n            // Compute a static rotation to align the leaf (similar to the Sass calculation)\n            const rotation = 90 - (360 / leaf.totalInRing) * leaf.leafIndex;\n            // Create a radial gradient background using the computed hue\n            const background = `radial-gradient(circle, hsla(${leaf.hue}, 100%, 50%, 1) 0%, hsla(${leaf.hue}, 100%, 50%, 0) 70%)`;\n\n            return (\n              <motion.div\n                key={leaf.id}\n                className=\"absolute\"\n                style={{\n                  width: `${leafWidth}vmin`,\n                  height: `${leafHeight}vmin`,\n                  borderRadius: '50%',\n                  background,\n                  rotate: rotation,\n                }}\n                animate={{\n                  x: [xStart + 'vmin', xEnd + 'vmin'],\n                  y: [yStart + 'vmin', yEnd + 'vmin'],\n                  opacity: [0, 1, 1, 1, 0],\n                }}\n                transition={{\n                  duration: 0.8,\n                  repeat: Infinity,\n                  ease: 'easeInOut',\n                  delay: leaf.delay,\n                  times: [0, 0.2, 0.5, 0.7, 1],\n                }}\n              />\n            );\n          })}\n        </div>\n\n        <div className=\"absolute inset-0 flex items-center justify-center pointer-events-none\">\n          <div\n            className=\"rounded-full\"\n            style={{\n              width: '30vmin',\n              aspectRatio: '1',\n              background: 'inherit',\n              filter: 'blur(1rem)',\n              transform: 'translateY(50%)',\n            }}\n          />\n        </div>\n      </div>\n    );\n  },\n);\n\nGooeyBackground.displayName = 'GooeyBackground';\n\nexport { GooeyBackground, type GooeyBackgroundProps };\n",
      "type": "registry:ui",
      "target": "components/animate-ui/gooey-background.tsx"
    }
  ]
}