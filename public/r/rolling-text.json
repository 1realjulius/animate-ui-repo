{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "rolling-text",
  "type": "registry:ui",
  "title": "Rolling Text",
  "description": "Rolling text component",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "path": "registry/text/rolling-text.tsx",
      "content": "'use client';\n\nimport * as React from 'react';\nimport { motion } from 'motion/react';\n\nconst entryAnimation = {\n  initial: { rotateX: 0 },\n  animate: { rotateX: 90 },\n};\n\nconst exitAnimation = {\n  initial: { rotateX: 90 },\n  animate: { rotateX: 0 },\n};\n\nconst formatCharacter = (char: string): string => {\n  return char === ' ' ? '\\u00A0' : char;\n};\n\ninterface RollingTextProps\n  extends Omit<React.HTMLAttributes<HTMLSpanElement>, 'children'> {\n  duration?: number;\n  delay?: number;\n  startOnView?: boolean;\n  text: string;\n}\n\nconst RollingText = React.forwardRef<HTMLSpanElement, RollingTextProps>(\n  (\n    { duration = 0.5, delay = 0.1, startOnView = false, text, ...props },\n    ref,\n  ) => {\n    const characters = React.useMemo(() => text.split(''), [text]);\n\n    return (\n      <span {...props} ref={ref}>\n        {characters.map((char, idx) => (\n          <span\n            key={idx}\n            className=\"relative inline-block perspective-[9999999px] transform-3d w-auto\"\n            aria-hidden=\"true\"\n          >\n            <motion.span\n              className=\"absolute inline-block backface-hidden origin-[50%_25%]\"\n              initial={entryAnimation.initial}\n              animate={entryAnimation.animate}\n              {...(startOnView\n                ? { whileInView: entryAnimation.animate }\n                : { animate: entryAnimation.animate })}\n              transition={{\n                ease: 'easeOut',\n                duration,\n                delay: idx * delay,\n              }}\n            >\n              {formatCharacter(char)}\n            </motion.span>\n            <motion.span\n              className=\"absolute inline-block backface-hidden origin-[50%_100%]\"\n              initial={exitAnimation.initial}\n              {...(startOnView\n                ? { whileInView: exitAnimation.animate }\n                : { animate: exitAnimation.animate })}\n              transition={{\n                ease: 'easeOut',\n                duration,\n                delay: idx * delay + 0.3,\n              }}\n            >\n              {formatCharacter(char)}\n            </motion.span>\n            <span className=\"invisible\">{formatCharacter(char)}</span>\n          </span>\n        ))}\n\n        <span className=\"sr-only\">{text}</span>\n      </span>\n    );\n  },\n);\n\nexport { RollingText, type RollingTextProps };\n",
      "type": "registry:ui",
      "target": "components/animate-ui/rolling-text.tsx"
    }
  ]
}